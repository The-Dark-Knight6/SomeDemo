【let和const命令】
1、let用来声明变量、只在声明变量的作用域内有效，块状作用域。
2、for循环变量中，for（）里头为父作用域，{}里头为子作用域，有单独的各自作用域范围。
3、let和const不存在变量提升，let声明变量需要先声明后使用（暂时性死区）。
4、const声明一个常量，声明之后不可改变，即必须初始化值。
5、es6中变量声明有6中方法：var,function,let,const,import,class。
【变量的解构赋值】
1、在数组和对象中给变量赋值，叫做解构赋值。
2、当解构赋值中存在默认值时，当+==undefined才默认值才会生效。
3、对象的解构赋值为当右边的属性与它同名时，而数组则是按照次序。
4、字符串、数值和布尔值也可以进行解构赋值。
5、解构赋值用途：
“交换变量的值”
let a = 3,b=4;[a,b]=[b,a];//输出a=4,b=3;
“返回函数的多个值（数组或对象）”
function example(){return[1,2,3]};let [a,b,c]=example();
“定义函数的参数”、“提取json数据”、“遍历map结构”
【字符的扩展】
1、反引号的模版字符串``，其中的变量需要使用${}来包裹。
【字符串的新增方法】
1、includes()返回布尔值，表示是否找到了所需要寻找的参数字符串。
2、startsWith()返回布尔值，表示所需寻找的参数字符串是否存在于原字符串的头部。
3、endsWith()返回布尔值，表示所需寻找的参数字符串是否存在于原字符串的尾部。
4、repeat()返回新的字符串，表示将原字符串重复n遍。
5、padStart()补全字符串的头部。
6、padEnd()补全字符串的尾部。（即在原字符串中的尾部加入新的字符串）。
7、trimStart()去除字符串头部的空格。
8、trimEnd()去除字符串尾部的空格。
【正则的扩展】
there's nothing...
【数值的扩展】
1、Number.isFinite()返回布尔值，检验一个数值是否为有限。（参数）
2、Number.isNaN()返回布尔值，检验一个数值是否为nan，即是否为数值。
3、Number.parseInt()返回整数。
4、Number.parseFloat()返回浮点数。
5、Number.isInteger()判断一个数值是否为整数。
6、Math对象的扩展。
【函数的扩展】
1、可以直接给函数参数设置默认值。function temp(a=0,b=66){return{a,b}}
2、函数参数默认值一般是函数的尾参数，在函数所存在的参数中排末尾。
3、引入rest参数，（必须是最后一个参数，同时length属性不包含rest参数）即function aa(...array){return array};aa(1,3,4);
4、函数name属性，返回该函数名称。
5、允许使用=>箭头来代替函数，也就是箭头函数。与普通函数的不同：所指向的this有差异。同时箭头函数没有自己的this，有的是指向最外层函数的this。
6、不适用箭头函数场景：定义对象的方法，其中使用箭头函数的this所指向的为全局变量对象，与预期不符合；需要使用动态this的时候。
7、尾调用：一个函数的最后一步是调用另外一个函数。
【数组的扩展】
1、扩展运算符：...（就是三个英文符号的点）。
2、Array.from()将可迭代的对象转为真正的数组，需要拥有length属性。
3、Array.of()将一组值，转换为数组。
4、Array.copyWithin()在数组内部将指定成员位置复制到其他位置，会改变当前数组。
5、Array.find()找出数组中第一个符合条件的成员。
6、Array.findIndex()返回数组中第一个符号条件的成员的位置。
7、Array.fill()给定一个值，填充整个数组。
【对象的扩展】
1、定义对象属性，可以将表达式作为属性值放在方括号内：obj['key'+'i']=123;
2、super关键字，指向当前对象的原型对象。
3、对象扩展运算符（...），同数组扩展运算符类似。
【对象的新增方法】
1、Objesct.is()用来比较两个值是否严格相等。‘==’会自动转换对比的数据类型，‘===’中NaN不等于自身且+0与-0判断为true。Object.is()的行为与'==='基本一致。
2、object.assign()用于将对象的属性合并。用途，为对象添加属性、方法，合并多个对象，克隆对象。
3、object.keys()返回对象中可遍历属性的键名数组。
4、object.values()返回对象中可遍历属性的键值数组。
5、object.entries()返回数组，成员为原对象中键值对。
6、object.fromEntries()返回对象，用于将一个键值对数组转换为对象。
【symbol】
1、原始数据类型symbol，表示独一无二的值，js 的第七种数据类型。前六种为数值、字符串、null、undefined、对象、布尔值。其中symbol()可以接受一个参数，用来描述该symbol，便于区分。
2、symbol类型的值不能和其它类型的值进行运算。
3、symbol作为对象属性值不能用点运算符。
4、更多参见文档...
【Set和Map数据结构】
1、set类似于数组，成员的值是唯一不重复的，一种新的数据结构。
2、set函数可以接受一个数组（可迭代循环的对象）作为参数默认值。
3、可用于数组去重：[...new Set([2,3,2,3,3,34,2])]，可用于字符串去重：[... new Set('accumulate')].join('')。
4、set属性size返回成员总数，add()方法为向set成员中添加指定值，delete()删除指定的成员值，has()返回布尔值表示该set中是否存在这个成员，clear()清除所有成员。
5、set结构的遍历方法，keys(),values(),entries(),forEach()。由于set结构没有键名只有键值，固然keys()与values()所循环的结果一致。同时forEach()方法接受key,value作为参数，用于循环对每个成员进行某种操作。通过遍历可以很容易实现两个数组的交集、并集、差集，也可以在遍历中就改变原来的set结构。
6、WeakSet结构与Set结构类似，但是它的成员只能是对象。有三个方法，add(),delete(),has(),作用同前面的set结构方法类似。不可遍历，弱引用，可用于存储dom节点。
7、Map数据结构类似于对象，提供‘值-值’的对应，键的范围不限于字符串，各种类型都可。
8、Map的方法，set()为添加键值，get()为得到某个键名的键值，has()返回布尔值判断结构汇总是否存在这个键，delete()删除某个键，clear()清楚所有成员没有返回值，size属性返回Map结构的成员总数。同时Map结构的遍历方法同上。
9、WeakMap与Map结构类似，它只接受对象作为键名。
【Proxy】【Reflect】
【Promise】【Iterator和for...of循环】
【Generator函数的语法】【Generator函数的语异步应用】
【async函数】
参见文档：ecmascript6。
【class的基本语法】
1、class类作为对象的模版，定义一个类，同时在这个类中可以定义方法，this指带实例对象。
2、类的数据类型为函数，本身指向构造函数，使用时用new()，类中定义的方法之间不需要逗号隔开，且不需要加function()直接写函数定义即可。
3、类中有个默认构造函数constructor()，new成实例对象时，自动调用该方法。
4、类的内部可以设置存值函数（set）和取值函数（get），即在方法的前面加这个关键字。
5、类和模块（Module）都是默认严格模式（usr strict）。
6、static关键字表示该方法不会被实例继承直接通过类来引用。
【class的继承】
【Module的语法】【Module的加载实现】
【编程风格】
【其它js】
1、arguments获取函数所有传入参数的集合，类似于数组，js函数内置的关键字。
2、函数的方法apply()与call()指定函数内部的this指向，接受两个参数，第一个为this变量的指向，第二个为函数本身的参数。前者将第二个参数打包为数组，后者直接将参数按顺序传入。
3、
【微信小程序】
1、小程序主要开发语言为javascript，同时逻辑层和渲染层是分开的，即有些js库（jq，zepto）在小程序中是无法使用的。
2、json数据格式在小程序中的作用：静态配置。json格式为key-value键值对模式，必须用双引号，不可加备注，被[}包裹着，同时不能使用js中undefined这个数据类型。
3、wxml模版类似于网页开发中的html，其中标签有些许的改变，同时采用和vue，react框架类似的mvvm逻辑和渲染分开的方式。
4、wxss样式类似于css，增加了尺寸单位rpx，适用于小程序的页面像素尺寸。
5、js逻辑交互。即小程序中的逻辑层，处理小程序的所有交互。
6、wxml模版：wx:for="{{array}}"，当前项下标默认变量名为index，变量名为item。也可以使用wx:for-index和wx:for-item来指定当前数组的下标名以及变量名。wx:key来指定项目中的惟一标识符。
7、template模块可以动态使用，用name定义声明，之后在<template is="name"/>中使用。
8、使用import和include进行页面间的相互引用。
9、样式的引用：@import './test.wxss'。
10、小程序脚本执行顺序同app.json中文件的顺序一致。App()构造器存在于项目根目录里的app.js中，其它js文件可以通过getApp()来获取程序实例。即other.js中，let globel=getApp();
11、由于所有页面逻辑都是跑在同一个jsCore中，固使用setTimeout或者setInterval的时候在离开当前所使用这个函数的页面时候并未清楚这些定时器，需要手动来进行清理。
12、this.setDate()函数用来渲染更新data()中的数据。
13、普通点击事件（轻触点击屏幕）bindtap=""，catchbind=""阻止事件冒泡的点击事件，
14、wx.redirectTo是两个页面间的平行跳转，跳转后是没有返回到上一页的，而wx.navigateTo是父子页面间的跳转，跳转后是可以返回到上一页的所以当使用wx.redirectTo跳转的时候，onUnload:function():页面关闭函数会被执行，当使用wx.navigateTo跳转的时候，onHide:function():页面隐藏函数会被执行
15、hover-class=""点击button时的反馈，应用wxml模版中。loading="{{loading}}"可以用来生成加载效果，loading在js中值为布尔值。wx.showToast({})用来弹出提示，详见小程序api。
wx.showModal({})用于弹框错误提示，提醒用户下一步操作，模拟对话框。
16、下拉刷新：在page.json中{enablePullDownRefresh:true}，而后逻辑js中使用onPullDownRefresh(){}调用这个方法。同时上拉触底{"onReachBottomDistance": 100 }，js中onReachBottom(){}。// 当界面的下方距离页面底部距离小于100像素时触发回调
17、wx.request({})这个api用来发起http请求，前提需要绑定服务器域名。其中小程序发起的http请求必须是https请求，必须提供https服务的接口，同时请求的域名需要在小程序管理平台进行设置。通过data参数可以给接口传递所需要的相应参数。
18、设置接口返回数据的超时时间  "networkTimeout": {"request": 3000}在小程序根目录中的app.json中。详见官方文档，发起https网络通信。wx.scanCode({})，调用微信扫一扫api。
19、

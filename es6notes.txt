【编程风格】
1、块级作用域使用let取代var，使得变量作用域局限明显，var有变量提升，而let没有。
2、向对象中添加属性可以使用。Objesct.assign(object,｛key:value｝);
3、使用扩展运算符来进行数组的复制。arrcopy = [...arr];
4、使用Array.from()方法将类似可循环对象转化为数组。
5、立即执行函数可以写成箭头函数形式。(()=>{console.log(666);})();

【symbol】
1、js的第七种数据类型，表示独一无二的值。前六种是：undefined,null,布尔值，数值，
字符串、对象。

【set和map数据结构】
1、set类似于数组，其内元素是唯一且不重复的。
2、set接受一个数组作为参数，其数据结构中size为length长度，详见控制台输出。
3、Array.from()将set类型转为array类型。
4、map类似于对象，不同与object中的‘键值对（字符串-值）’这里可以使用任意‘键值对’（值-值），让值不再局限于字符串。

【let和const命令】
1、let用来声明变量、只在声明变量的作用域内有效，块状作用域。
2、for循环变量中，for（）里头为父作用域，{}里头为子作用域，有单独的各自作用域范围。
3、let和const不存在变量提升，let声明变量需要先声明后使用（暂时性死区）。
4、const声明一个常量，声明之后不可改变，即必须初始化值。
5、es6中变量声明有6中方法：var,function,let,const,import,class。

【变量的解构赋值】
1、在数组和对象中给变量赋值，叫做解构赋值。
2、当解构赋值中存在默认值时，当+==undefined才默认值才会生效。
3、对象的解构赋值为当右边的属性与它同名时，而数组则是按照次序。
4、字符串、数值和布尔值也可以进行解构赋值。
5、解构赋值用途：
“交换变量的值”
let a = 3,b=4;[a,b]=[b,a];//输出a=4,b=3;
“返回函数的多个值（数组或对象）”
function example(){return[1,2,3]};let [a,b,c]=example();
“定义函数的参数”、“提取json数据”、“遍历map结构”

【字符的扩展】
1、反引号的模版字符串``，其中的变量需要使用${}来包裹。

【字符串的新增方法】
1、includes()返回布尔值，表示是否找到了所需要寻找的参数字符串。
2、startsWith()返回布尔值，表示所需寻找的参数字符串是否存在于原字符串的头部。
3、endsWith()返回布尔值，表示所需寻找的参数字符串是否存在于原字符串的尾部。
4、repeat()返回新的字符串，表示将原字符串重复n遍。
5、padStart()补全字符串的头部。
6、padEnd()补全字符串的尾部。（即在原字符串中的尾部加入新的字符串）。
7、trimStart()去除字符串头部的空格。
8、trimEnd()去除字符串尾部的空格。

【正则的扩展】
there's nothing...
【数值的扩展】
1、Number.isFinite()返回布尔值，检验一个数值是否为有限。（参数）
2、Number.isNaN()返回布尔值，检验一个数值是否为nan，即是否为数值。
3、Number.parseInt()返回整数。
4、Number.parseFloat()返回浮点数。
5、Number.isInteger()判断一个数值是否为整数。
6、Math对象的扩展。
【函数的扩展】
1、可以直接给函数参数设置默认值。function temp(a=0,b=66){return{a,b}}
2、函数参数默认值一般是函数的尾参数，在函数所存在的参数中排末尾。
3、引入rest参数，（必须是最后一个参数，同时length属性不包含rest参数）即function aa(...array){return array};aa(1,3,4);
4、函数name属性，返回该函数名称。
5、允许使用=>箭头来代替函数，也就是箭头函数。与普通函数的不同：所指向的this有差异。同时箭头函数没有自己的this，有的是指向最外层函数的this。
6、不适用箭头函数场景：定义对象的方法，其中使用箭头函数的this所指向的为全局变量对象，与预期不符合；需要使用动态this的时候。
7、尾调用：一个函数的最后一步是调用另外一个函数。
【数组的扩展】
1、扩展运算符：...（就是三个英文符号的点）。
2、Array.from()将可迭代的对象转为真正的数组，需要拥有length属性。
3、Array.of()将一组值，转换为数组。
4、Array.copyWithin()在数组内部将指定成员位置复制到其他位置，会改变当前数组。
5、Array.find()找出数组中第一个符合条件的成员。
6、Array.findIndex()返回数组中第一个符号条件的成员的位置。
7、Array.fill()给定一个值，填充整个数组。
【对象的扩展】
1、
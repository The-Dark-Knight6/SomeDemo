ECMAScript是一种语言标准，JavaScript是这个标准的一种实现。
js严格区分大小写。f12中console可以直接进行js调试写js代码。

数据类型：数字（Number），字符串（string），布尔值（true，false），
null（空值），undefined（值未定义），数组，对象，函数。

模版字符串``反引号书写，可连接多个变量或者按格式换行等。
toUpperCase()将一个字符串全部转换为大写。
toLowerCase()将一个字符串全部转换为小写。

indexOf()搜索指定字符串（数组）所出现的位置。
substring()返回指定索引区间的字符串。
slice()返回指定区间的数组元素。slice(0,3)返回第一个和第四个元素之间的三个。
push()向数组末尾添加若干元素，pop()将数组最后一个元素删除掉。
unshift()向数组头部添加若干元素，shift()将数组第一个元素删除掉。
sort()对数组进行排序。
reverse()反转字符串。
splice()从指定引索开始删除若干元素，再从该位置添加若干元素。
concat()将当前数组和另一个数组连接起来返回一个新的数组。
join()将当前数组每个元素用指定字符连接起来并返回。

js对象由键值对组成，键为属性，值即为属性的值。
for(var i in list){i+list[i]}可以遍历对象的键值对。
es6新增数据类型Map()和Set()。iterable新的类型。
arguments关键字存在函数内部，用来指向传入函数的所有参数，可以用来判断传入参数的个数。
rest参数只写在最后，用...来标识，为es6新增参数，指向...后的所有参数。
js引擎会自动在语句后面加上分号用来表示当前语句的结束。

变量提升：将后置声明的变量提升到前面，但所赋予的值并没有一起提升。
var,let,const三者都可定义变量，let,const为块状作用域，const为常亮必须要初始化赋值。
解构赋值，同时对一组变量进行赋值。var [x,y,z] = ['hello','stark','nice'];
在一个对象中绑定函数，称为这个对象的方法。
高阶函数，让函数的参数接收别的函数。eg:map(),reduce(),
function fos(x,y,f){return f(x)+f(y)};
var a = fos(-5,5,Math.abs);
filter()用来将限定条件的array去掉返回新的array。
sort()方法默认排序将所有元素转换为string类型，通过元素ASCII码值进行比较。

js闭包：在一个函数中又定义另外一个函数，且内部的函数引用外部函数的变量。
regexp（正则表达式）：/d匹配一个数字，/w匹配一个字母或数字，
*匹配任意个字符，+匹配至少一个字符，?匹配0个或1个字符，
{n}匹配n个字符，{n,m}匹配n-m个字符,/s匹配空格字符，
/转义字符转换特殊的字符，如'-'表示为/- ，[]为表示的范围，
js中表示regexp：var reg =  /^\d{3}\-\d{3,8}$/;
测试正则表达式：reg.test('000-0000')//return true

json为一种数据交换格式。将js对象转换为json字符串:json.stringify(),
将json字符串转换为json格式字符串：json.parse()
window浏览器对象，window.innerHeight显示网页的净高，
window.innerWidth显示网页的净宽（除去浏览器的菜单栏、工具栏、边框等占位元素）
outerWidth,outerHeight获取浏览器窗口的整个高度。

match()方法，用来在字符串中检索指定的值，或找到和regexp的匹配（需要有标志g）。
区别和indexOf()不同，match()方法返回指定的值，而不是指定值的位置。
var a = 'hello,world';a.match('world');//返回 world.
var b = '1,part,2,parts,3';b.match(/\d+/g);//返回 1,2,3.

&lt;转义为<,&gt;转义为>,&nbsp;转义为空格,&amp;转义为&.
insertBefore(a,b)将a元素插入到b元素前面，需要找到b元素的父元素。
replaceChild(a,b)将a元素替换为b元素，需要找到b元素的父元素。
更换标签栏的小图标<link rel="shortcut icon" href="url" type="image/x-icon" />

<div class="container">
<div class="row"><div class="col-xs-6">content</div></div></div>
.col-xs(超小型),.col-sm(平板),.col-md(中型电脑),.col-lg(大型电脑)。
.col-md-offset-*(位偏移，该列左外边距增加*列)。
列的嵌套：在row的一列之中嵌套row，其列数<=12。

(05-11)购买服务器申请备案、着手准备vue个人博客项目。
服务器的简单配置（腾讯云centos7.2 64位）：
1、下载xshell6进入到服务器（用户名、密码、公网ip）
2、安装nginx及配置（https://blog.csdn.net/wxyjuly/article/details/79443432）
3、利用winscp连接服务器（上传文件）
在以上条件下使用vue开发项目时需要安装：（nodejs、npm、cnpm、端口、代理）
1、安装nodejs（百度寻找最优方法，坑有时候也还是要踩的）
https://www.cnblogs.com/baby123/p/6955396.html
2、升级nodejs到最新版本（提供一些比较好的链接）
https://www.cnblogs.com/xiashan17/p/6907537.html
3、增加服务器的端口（vue运行需要80**的端口）
https://blog.csdn.net/github_39533414/article/details/79675678
4、添加nginx.conf中的相关内容开放端口（目录为：/usr/local/nginx/conf/nginx.conf）
server{... 
	location / {
	#不用看了 看不懂。。。直接cope
	 proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header Host  $http_host;
     proxy_set_header X-Nginx-Proxy true;
     proxy_set_header Connection "";
     proxy_pass   http://127.0.0.1:8080; 
	 }
	 ...
	 }
5、安装pm2，后台运行多个服务：（即不用持续手动的开启npm run dev来运行vue项目，而是自动开启
这样当关闭xshell时你的网站也可以运行访问vue项目）
cnpm install -g pm2
进入需要启动的vue项目：
cd /www/demo
之后运行这个服务：（即可以在服务器中一直运行npm run dev）
pm2 start npm -- run dev (注意空格)
查看运行状态：
pm2 list

(05-13)处理路由切换的bug，大致完成每个页面的基本架构。
处理的bug：
vue路由的切换中可以使用this.$router.push({})以及<router-link :to=""></router-link>两种方法
这里推介使用第二种内嵌<a>标签的方法，选中它时会自懂增加一个class样式，
可以用来给选中时候的路由加上相应样式，而用第一种会出现重新刷新当前路由得不到当前样式的尴尬。
(05-14)‘关于’页面增加地图及相关介绍，增加全局媒体查询适配，上传项目至主ip地址。
(05-15)‘关于’页面增加评论功能，增加页面加载时的延迟动画，修正字体显示大小。
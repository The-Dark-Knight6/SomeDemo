【node安装】
node教程参见菜鸟教程node.js教程以及廖雪峰官方网站node教程（主要）。
终端常见命令：
node -v 查看当前安装node.js版本。
npm -v 查看当前安装npm版本。
node name.js（name为js文件名称）：运行当前name.js文件。

【node repl （交互式解释器）】
可以在终端调试js代码。
使用方法：终端中输入 node。下方出现 > 即可启用repl。
repl常见命令：
ctrl + c : 退出当前终端状态。
ctri + c （按两下c）：退出 repl。
ctrl + d ：退出repl。
tab：列出当前命令。

【node函数】
函数可以作为另一个函数接收一个参数（在一个函数里面调用另外一个函数）。	

【buffer（缓冲区）】
定义：用来存放二进制数据的缓存区。


【node模块】
单独的一个js文件即可成为一个模块。
在模块内使用：module.exports = name;来暴露出该模块的输出变量。
引入其它模块输出的变量： var variable = require('./相对路径')。
多个变量输出：module.exports = {name1:name1,name2:name2}。
接受多个变量：var variable = require('./路径');variable.name1。

【fs模块】
nodejs文件系统模块，负责读写文件。
读取文件：var fs = require('fs');
	fs.readFile('name.txt','utf-8',function(err,data){
	if(err){console.log(err);//失败返回}else{console.log(data);//成功返回}
	})//异步读取文件，同步不记录，参见文档
写入文件：var fs = require('fs');
	var data = '这是写入的数据。';
	fs.writeFile('name.txt',data,function(err){
	if(err){console.log(err);}else{console.log('success');}
	})
读取文件信息：var fs = require('fs');
	fs.stat('name.txt',function(err,data){
	if(err){console.log(err);}else{console.log('iffile:'+data.ifFile());
	if(data.isFile()){console.log('file_size:'+data.size);}}
	})

【http模块】
解析url使用url模块，通过parse()方法将字符串机械为url对象：
let url = require('url');
console.log(url.parse('www.baidu.com'));
处理本地文件目录使用path模块：
let path = require('path');
console.log(path.resolve('.'));//解析当前目录（打开当前目录）

【koa】
koa：基于nodejs的web框架。
1、创建相关项目目录，使用npm install koa@2.0.0安装依赖。
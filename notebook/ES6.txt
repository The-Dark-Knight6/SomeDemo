ES6教程：https://es6.ruanyifeng.com/

【let和const命令】
let用来声明变量、只在声明变量的作用域内有效，块状作用域。

for循环变量中，for（）里头为父作用域，{}里头为子作用域，有单独的各自作用域范围。

let和const不存在变量提升，let声明变量需要先声明后使用（暂时性死区）。

const声明一个常量，声明之后不可改变，即必须初始化值。

es6中变量声明有6中方法：var,function,let,const,import,class。

【变量的解构赋值】
按照对应位置，给予变量相应的值。
let [a,b] = [1,3];	// a = 1; b = 3;

解构不成功则返回undefined。
let [a] = []; 	// a = undefined;

存在解构的默认值，只有当解构的值为undefined时，默认值才会生效。
let [a = 'abc'] = ['good'];	// a = 'good';
let [a = 'abc'] = [];	// a = undefined;
let [a = 'abc'] = [null];	// a = null;

对象的解构赋值有模式匹配。
let {foo : baz} = {foo : 'hello' , bas : 'good'};	
// baz = 'hello'; foo是模式，baz才是变量。
let {foo , bac} = {foo : 123 , bac : 'good'};
// foo = 123 ; bac = 'good';

【字符串的扩展】
模版字符串。
$('#code').append(`<p>${variable}</p>`);
//化繁为简 等同于 $('#code').append('<p>' + variable + '</p>');

【字符串的新增方法】
includes(string,number)。
返回布尔值，查找字符串中是否存在该字符。
	string：必选项，需要查找的字符串。
	number：可选项，开始查找该字符串的位置，默认为0。

startWidth(string,number)。
返回布尔值，查找字符串中该字符是否作为字符串的头部。
	string：必选项，查找的字符串。
	number：可选项，开始查找的位置，默认为0。
	
endWidth(string,number)。
返回布尔值，查找字符串中该字符是否在字符串的尾部。
	string：必选项，查找的字符串。
	number：可选项，开始查找的位置，默认为0.
	
repeat(number)。
返回一个新字符串，将原字符串重复number遍。
	number：必选项，数字。
	
padStart(length,string)。
返回一个新字符串，补全该字符串的头部。
	length：必选，补全后字符串的长度。
	string：必选，要补全的字符。

【正则的扩展】

【数值的扩展】
1、Number.isFinite()返回布尔值，检验一个数值是否为有限。（参数）
2、Number.isNaN()返回布尔值，检验一个数值是否为nan，即是否为数值。
3、Number.parseInt()返回整数。
4、Number.parseFloat()返回浮点数。
5、Number.isInteger()判断一个数值是否为整数。
6、Math对象的扩展。
【函数的扩展】
1、可以直接给函数参数设置默认值。function temp(a=0,b=66){return{a,b}}
2、函数参数默认值一般是函数的尾参数，在函数所存在的参数中排末尾。
3、引入rest参数，扩展运算符，（必须是最后一个参数，同时length属性不包含rest参数）即function aa(...array){return array};aa(1,3,4);
4、函数name属性，返回该函数名称。
5、允许使用=>箭头来代替函数，也就是箭头函数。与普通函数的不同：所指向的this有差异。同时箭头函数没有自己的this，有的是指向最外层函数的this。
6、不适用箭头函数场景：定义对象的方法，其中使用箭头函数的this所指向的为全局变量对象，与预期不符合；需要使用动态this的时候。
7、尾调用：一个函数的最后一步是调用另外一个函数。
【数组的扩展】
1、扩展运算符：...（就是三个英文符号的点）。
2、Array.from()将可迭代的对象转为真正的数组，需要拥有length属性。
3、Array.of()将一组值，转换为数组。
4、Array.copyWithin()在数组内部将指定成员位置复制到其他位置，会改变当前数组。
5、Array.find()找出数组中第一个符合条件的成员。
6、Array.findIndex()返回数组中第一个符号条件的成员的位置。
7、Array.fill()给定一个值，填充整个数组。
【对象的扩展】
1、定义对象属性，可以将表达式作为属性值放在方括号内：obj['key'+'i']=123;
2、super关键字，指向当前对象的原型对象。
3、对象扩展运算符（...），同数组扩展运算符类似。
【对象的新增方法】
1、Objesct.is()用来比较两个值是否严格相等。‘==’会自动转换对比的数据类型，‘===’中NaN不等于自身且+0与-0判断为true。Object.is()的行为与'==='基本一致。
2、object.assign()用于将对象的属性合并。用途，为对象添加属性、方法，合并多个对象，克隆对象。
3、object.keys()返回对象中可遍历属性的键名数组。
4、object.values()返回对象中可遍历属性的键值数组。
5、object.entries()返回数组，成员为原对象中键值对。
6、object.fromEntries()返回对象，用于将一个键值对数组转换为对象。
【symbol】
1、原始数据类型symbol，表示独一无二的值，js 的第七种数据类型。前六种为数值、字符串、null、undefined、对象、布尔值。其中symbol()可以接受一个参数，用来描述该symbol，便于区分。
2、symbol类型的值不能和其它类型的值进行运算。
3、symbol作为对象属性值不能用点运算符。
4、更多参见文档...
【Set和Map数据结构】
1、set类似于数组，成员的值是唯一不重复的，一种新的数据结构。
2、set函数可以接受一个数组（可迭代循环的对象）作为参数默认值。
3、可用于数组去重：[...new Set([2,3,2,3,3,34,2])]，可用于字符串去重：[... new Set('accumulate')].join('')。
4、set属性size返回成员总数，add()方法为向set成员中添加指定值，delete()删除指定的成员值，has()返回布尔值表示该set中是否存在这个成员，clear()清除所有成员。
5、set结构的遍历方法，keys(),values(),entries(),forEach()。由于set结构没有键名只有键值，固然keys()与values()所循环的结果一致。同时forEach()方法接受key,value作为参数，用于循环对每个成员进行某种操作。通过遍历可以很容易实现两个数组的交集、并集、差集，也可以在遍历中就改变原来的set结构。
6、WeakSet结构与Set结构类似，但是它的成员只能是对象。有三个方法，add(),delete(),has(),作用同前面的set结构方法类似。不可遍历，弱引用，可用于存储dom节点。
7、Map数据结构类似于对象，提供‘值-值’的对应，键的范围不限于字符串，各种类型都可。
8、Map的方法，set()为添加键值，get()为得到某个键名的键值，has()返回布尔值判断结构汇总是否存在这个键，delete()删除某个键，clear()清楚所有成员没有返回值，size属性返回Map结构的成员总数。同时Map结构的遍历方法同上。
9、WeakMap与Map结构类似，它只接受对象作为键名。
【Proxy】【Reflect】
【Promise】【Iterator和for...of循环】
【Generator函数的语法】【Generator函数的语异步应用】
【async函数】
参见文档：ecmascript6。
【class的基本语法】
1、class类作为对象的模版，定义一个类，同时在这个类中可以定义方法，this指带实例对象。
2、类的数据类型为函数，本身指向构造函数，使用时用new()，类中定义的方法之间不需要逗号隔开，且不需要加function()直接写函数定义即可。
3、类中有个默认构造函数constructor()，new成实例对象时，自动调用该方法。
4、类的内部可以设置存值函数（set）和取值函数（get），即在方法的前面加这个关键字。
5、类和模块（Module）都是默认严格模式（usr strict）。
6、static关键字表示该方法不会被实例继承直接通过类来引用。
【class的继承】
【Module的语法】【Module的加载实现】
【编程风格】
【其它js】
1、arguments获取函数所有传入参数的集合，类似于数组，js函数内置的关键字。
2、函数的方法apply()与call()指定函数内部的this指向，接受两个参数，第一个为this变量的指向，第二个为函数本身的参数。前者将第二个参数打包为数组，后者直接将参数按顺序传入。
3、

【jquery】
1、jquery中最好不要使用箭头函数，会使得$(this)的this指针指向不明从而导致意料之外bug。
2、引用jq，下载jq文件或者使用cdn引入。
3、在浏览器控制台中可以使用$.fn.jquery查看当前网页使用的jq版本。
4、mousedown,mouseup,click的区别：mousedown鼠标按下左、右两键均可触发，mouseup鼠标按下左、右两键并在此元素上松开即可触发，click鼠标按下左键并在此元素上松开即可触发。
5、keydown,keyup,keypress的区别：keydown按下键盘上的某键即可触发，keyup按下键盘上某键后松开即可触发，keypress按下能够在屏幕上输出产生字符的按键即可触发。
6、$(':button')可以选择<button>标签以及<input type='button'>标签，而$('button')只可以选择<button>标签。即:可以理解为种类的选择，而[]可以理解为属性的选择，[href]选择带有href属性的元素。
7、faedTo()方法给元素渐变为给定的不透明度（介于0和1之间，0完全透明，1完全不透明）。
9、jq停止动画的方法$('element').stop()。同时只是停止当然元素身上的第一个动画，如需停止当前元素的所有动画效果，加上true即可，$('element').stop(true)。
10、获取元素的固有的属性使用prop()，获取自定义的dom属性使用attr()。
11、<tabel><tr><td></td></td></table>制作简介表格，只需要在table中使用样式width:100%;border-collpase:collpase;以及td中设置样式border:1px solid #ddd;padding:20px;即可展现一个良好的表格。
12、使用$.noConflict()方法可以用来解决jq中$符号和其它框架所产生的冲突。
13、jq选择器中的有关:first-child和:first-of-type是有不相同之处的：$('p:first-child')指的是属于它的父元素的第一个子元素的所有p元素（即这个p元素是其父元素的第一个子元素），$('p:first-of-type')指的是属于它的父元素下的p元素的所有p元素（即这个p可以不是它父元素的第一个元素，可以是它父元素下的第二个p元素，总之是在它父元素下首次出现的p元素）。

【canvas】（设计游戏）
1、canvas是可以用js来进行绘制图形的html元素，可以绘制出很多精彩绝伦的图案。
2、canvas画布默认大小为：300px*150px（宽*高）。
3、建立一个canvas画布需要两步。首先定义一个变量获取所定义的canvas元素，（其中<canvas width='300' height='150' id='canvas'>中的一般只有宽高两个属性），而后使用canva中的一个方法getContext()来选择使用2d或者3d进行图案的绘制，这个方法只有一个参数。
4、fillRect()绘制一个填充的矩形、strokeRect()绘制一个矩形的边框，clearRect()清空指定矩形区域且让该区域透明。（获取canvas之后用变量调用getContext()方法，用该变量使用）。
5、绘制路径，通过路径来绘制不同形状的图案。beginPath()开始绘制图案。moveTo()方法为绘制图案的起点，在调用beginPath()图案后调用。lineTo()方法绘制图案线条、轮廓。fill()通过填充绘制的图形来生成实心图形，其默认填充颜色为黑色。stroke()通过线条来绘制图案，一般当使用closePath()方法之后来调用会形成图案轮廓。closePath()闭合绘制图形的路径，如需绘制实心图案，直接调用fill()即可。
6、绘制圆形。首先通过beginPath()方法开始绘制图案，其后使用arc(x,y,radius,begin_angle,end_angle,time)方法来进行绘制圆形图案，其中x,y为圆心坐标，radius为圆半径，begin_angle为圆的初始角度，end_angle为圆的结束角度，其中角度单位为弧度，最后的time为画圆的方向，默认为顺时针方向，其值为false，如果给定true则为逆时针方向。
7、fillStyle属性可以用来给填充元素指定颜色。strokeStyle属性则可以用来给绘制图形的边框、轮廓指定颜色。globalAlpha属性用来给元素指定透明度，范围0-1，适用在所有的元素上。当然也可以给fillStyle=rgba()来进行设置或者strokeStyle=rgba()来进行设置（即设置填充透明度以及描边、轮廓的透明度）。
8、lineWidth属性设置线条的粗细，默认值为1，同时线条或线头线尾出现延伸渲染一半的情况。lineCap设置线段端点的显示形式。lineJoin属性设置线段相交处的显示形式。
9、使用createLinearGradient()方法创建线性渐变对象，使用createRadialGradient()方法创建径向渐变，详细参数参见文档，用addColorStop()方法给渐变上色。
10、fillText()绘制填充文本，strokeText()绘制文本边框，font属性用于设置文本属性。
11、save()保存当前画布状态，restore()释放上一次保存的画布状态。save()方法将当前canvas的所有状态保存在一个栈（先进后出）当中，当使用restore()方法时候将按照栈的顺序把所保存的状态进行移出（即复制上次所保存的状态样式，此次使用就不需要再重复声明相应的样式了）
12、translate()用来偏移坐标，移动到相对坐标原点（0，0）到所指定的坐标（x,y）上。rotate()以原点为中心进行旋转。scale()进行canvas画布的缩放。transform()变形矩阵。
